name: Build and Push Docker image to ECR

# git action이 언제 동작할 지 설정
on:
  push:
    branches:
      - dev_juwon

# OpenID Connect를 이용한 Git Hub AWS 로그인
permissions:
  id-token: write
  contents: read

# git aciton의 작업 내용
jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
		    # 코드 확인
      - name: Checkout code
        uses: actions/checkout@v2
				
				# JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # 또는 'zulu', 'adopt' 등 필요에 따라 선택
          java-version: '17'

				# SpringContents의 gradlew에 접근 권한 허가
      - name: Grant execute permission for gradlew
        run: chmod +x ./SpringSignUp/gradlew
			
				# SpringContents폴더의 Build 진행
      - name: Build with Gradle
        run: ./SpringSignUp/gradlew build -p ./SpringSignUp
        
				# OpenID Connect를 이용한 Git Hub AWS 로그인
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::767397880837:role/bbanggooodserverrole
          aws-region: ap-northeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: 767397880837.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: springsignup
          IMAGE_TAG: ${{ github.sha }}
        
        # ./SpringSignUp 디렉토리 내의 Dockerfile을 사용하여 이미지를 빌드
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./SpringSignUp
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
